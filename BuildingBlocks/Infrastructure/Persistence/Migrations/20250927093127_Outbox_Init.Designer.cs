// <auto-generated />
using System;
using BuildingBlocks.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuildingBlocks.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250927093127_Outbox_Init")]
    partial class Outbox_Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("BuildingBlocks.Domain.Companies.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("BuildingBlocks.Infrastructure.Persistence.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Error")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LockedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("LockedBy")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("OccurredOnUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ProcessedOnUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProcessedOnUtc", "LockedAtUtc");

                    b.ToTable("OutboxMessages", (string)null);
                });

            modelBuilder.Entity("BuildingBlocks.Domain.Companies.Company", b =>
                {
                    b.OwnsMany("BuildingBlocks.Domain.Companies.Entities.StateRegistration", "StateRegistrations", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Ie")
                                .IsRequired()
                                .HasMaxLength(32)
                                .HasColumnType("TEXT");

                            b1.Property<DateTimeOffset?>("LastCheckedAt")
                                .HasColumnType("TEXT");

                            b1.Property<string>("RegimeTributario")
                                .HasMaxLength(64)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Status")
                                .HasMaxLength(64)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Uf")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("CompanyId", "Uf")
                                .IsUnique();

                            b1.ToTable("StateRegistrations", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.OwnsOne("BuildingBlocks.Domain.Companies.ValueObjects.EmailAddress", "Email", b1 =>
                        {
                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(320)
                                .HasColumnType("TEXT")
                                .HasColumnName("Email");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.OwnsOne("BuildingBlocks.Domain.Companies.ValueObjects.TaxId", "TaxId", b1 =>
                        {
                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("TEXT")
                                .HasColumnName("TaxId");

                            b1.HasKey("CompanyId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.Navigation("Email");

                    b.Navigation("StateRegistrations");

                    b.Navigation("TaxId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
